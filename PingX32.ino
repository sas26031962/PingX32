/*
Программа реализации функции ping на базе контроллера Mega2560
Подключение платы Ethernet к выводам 10, 11, 12, 13
Использует OLED дисплей для индикации, подключение дисплея 
к выводам 22, 24, 26, 28, 30

Использует кнопки для управления процессом выбора IP адресов:
UP (Key1) 
DOWN (Key2)
SELECT (Key3)
RESTART (Key4)
--------------------------------------------------------------
Добавлены IP адреса коммутаторов ЗАК-57
192.168.0.2 - SWITCH_TOP, 
192.168.0.3 - SWITCH_BOTTOM, 

--------------------------------------------------------------
Инструкция по добавлению IP адреса
1) в модуле ipTab:
   - увеличить на 1 константу IP_ARRAY_LENGTH
   - добавить IP адрес и имя в структуру ipTab по аналогии с предыдущими записями
   - в методе void unit::selectIPbyCode(int code) добавить секцию case 
     для добавленного номера по аналогии с предыдущими записями 
*/

//=====================================================================
// Подключаемые модули
//=====================================================================
#include <SPI.h>         
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Ethernet.h>
#include <ICMPPing.h>

#include "cKey.h"
#include "ipTab.h"
#include "sPingResult.h"
#include "sDisplay.h"
#include "cSelection.h"

//=====================================================================
// Аппаратная конфигурация
//=====================================================================

#define OLED_MOSI   22
#define OLED_CLK    24
#define OLED_CS     26
#define OLED_DC     28
#define OLED_RESET  30

//=====================================================================
// Константы
//====================================================================
// Область для пингера
#define SERIAL_SPEED 115200 // Скорость обмена по последовательному порту
#define BUFFER_SIZE 256     // Размер текстового буфера для сообщений

#define LOW_LEVEL 50 // нижняя планки величины пинга что меньше значения low - это нормально
#define MIDDLE_LEVEL 200 // средняя планка величины пинга что меньше значения low - это средняя нагрузка

//========================================================================
//------------------------- ОБЪЯВЛЕНИЕ КЛАССОВ И СТРУКТУР ----------------
//========================================================================

//=====================================================================
// Глобальные переменные
//=====================================================================
Adafruit_SSD1306 sDisplay::display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

// Клавиатура
cSelection Kbd;


SOCKET pingSocket = 0;
char buffer [BUFFER_SIZE];
ICMPPing ping(pingSocket, (uint16_t)random(0, 255));
int rtime = 0;
ICMPEchoReply echoReply;

//=====================================================================
// Начальная установка
//=====================================================================
void setup() 
{
 
  // Инициализация последовательного порта
  Serial.begin(SERIAL_SPEED);
  
  // Инициализация кнопок
  Kbd.install();
  // Инициализация дисплея
  sDisplay::install();

  //Сообщение о готовности
  Serial.println("Pinger is ready..."); 

  //Выбор IP адреса для тестирования
  Kbd.selectRemoteIP();
  
}//End of void setup()

//=====================================================================
// Главный цикл
//=====================================================================
void loop()
{
  //-----------------------Обработка клавиши СБРОС---------------------
  Kbd.releaseReset();
  //-------------------------------------------------------------------
  
  // ip адрес проверяемого устройства
  IPAddress pingAddr(unit::addrX[0], unit::addrX[1], unit::addrX[2], unit::addrX[3]);      
  
  // Засечка времени начала попытки соединения
  int sc_start=millis(); 
  
  echoReply = ping(pingAddr, 4);

  // Засечка времени окончания попытки соединения
  int sc_stop=millis();

  // Вычисление среднего значения времени соединения 
  rtime=(rtime+(sc_stop-sc_start))/2; 

  PingResult = {
    millis() - echoReply.data.time,//t
    echoReply.data.seq % 1000,//n
    REQ_DATASIZE,//len
    echoReply.ttl,//ttl
    echoReply.status == SUCCESS,//status
    {
      echoReply.addr[0],//address
      echoReply.addr[1],
      echoReply.addr[2],
      echoReply.addr[3],
    },
    echoReply.status  
    };
  
  // Отображение результата на дисплее
  sDisplay::displayResult();
      
  delay(500);
}//End of void loop()


